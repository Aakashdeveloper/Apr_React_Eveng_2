https://code.visualstudio.com/
https://nodejs.org/en/
https://github.com/Aakashdeveloper

>>>Window
>GitBash
>>> https://git-scm.com/downloads


Basic JavaScript
Npm

React = 3
React_hooks -1
React-Redux =2
React-GarphQL 1
React-JWT(Login Logut)-1
Mock API
json-server
Depolyment
-> MERN
-------------------
React-Saga -1
Basic React Native=1
----------------------
Testing
-> Docker
-> Nginx
Github

--------NOT--------------
API
GarphQL
Login/Logout


///
list in listing page 
details page 
lifecycle Hooks

React Hooks


JSON> JavaScript Object Notation

{
    "sno":1
    "name":"John",
    "class":"React"
}

///Create TO package.json///
**Node Js must be installed
> Navigate to folder where you want to generate
> npm init
> answer all questions
> type "yes"

///////
Local Packages 
> Local to folder
> Every app need to install it again

Global Package
> Global To the system
> Only those package that help to create test or build

///How To install Local Packages///
> Navigate to folder where you want to install
> npm i react / npm install react 

> npm i 
npm i react@16.2.2

#Window 
> Run your cmd as admin
> npm i -g @aakashdeveloper/create-node-app

#Mac/Linux
> Open terminal
> sudo npm i -g @aakashdeveloper/create-node-app

/////Generate React Application////////
#Window 
(One Time)
> Run your cmd as admin
> npm i -g create-react-app

(Every time to generate app)
> Navigate to folder where you want to generate
> create-react-app firstapp

#Mac/Linux
(One Time)
> Open terminal
> sudo npm i -g create-react-app

(Every time to generate app)
> Navigate to folder where you want to generate
> create-react-app firstapp

> cd firstapp
> npm start
> localhost:3000



> Hooks Component 


ClassBase       |   Functional
-------------------------------------
Logical         |    Dumb
Bulk as compare |    Light in weight
to Functional
-----------------------------------------
Statefull        |   Stateless
Can Maintain     |   Cannot Maintain State
State


function abc(){
    return a,b
}


State = Local variable  (mutable)
Props = help to tranport data( immutable)

State Props

Component A      =====Props========     Component B

var a = 10
undefined
a>10?"hiii":"bie"
"bie"
a==10?"hiii":"bie"
"hiii"
a>10?a+1:a-1
9
a==10?a+1:a-1
11


/*
*******First Time*******
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/testgit1.git
git push -u origin master
*/

/***Next Time****/
git add .
git commit -m "first commit"
git push

git clone https://github.com/Aakashdeveloper/testgit1


id 
className
tagname


parent => child (props)
child => parent(props as function(callback function))


function add(a){
    return a+a
}


add(1)

npm i react-router-dom


///Step tto create dummy api/////
> npm i -g json-server
> json-server --watch db.json  --port 8900



/////Redux///////
State mangement
Structure the Application
Pass data between siblings


Redux
Flux
Relay

Redux
React-Redux


mapStateToProps() // Help to recive state from store
mapDispatchToProps // this help to bind and dipatch action

npm redux react-redux react-slick redux-promise react-router-dom


> index.js > Routing> Home.js> action(index.js)> Reducer(index.js)=> Reducer(
    article_reducer.js)>store(index.js)>index.js>home.js(here in mapStateToProps 
    we will recive data)


//graphql
npm i apollo-boost graphql graphql-tag react-apollo


/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
(response) => {userinfo}

sudo mongod --dbpath  /System/Volumes/Data/data/db


///////Production////////
npm run build